syntax = "proto3";

package thingmodel;
option java_multiple_files = true;
option java_package = "tuya.tedge.driver.sdk.grpc.thingmodel";
option java_outer_classname = "ThingModelProto";
option objc_class_prefix = "THM";
import "common.proto";
import "google/protobuf/empty.proto";

message Property {
  string ability_id = 1;
  string product_id = 2;
  string code = 3;
  string name = 4;
  string access_mode = 5;
  TypeSpec type_spec = 6;
  map<string, string> attributes = 7;
}

message TypeSpec {
  string type = 1;
  int64 min = 2;
  int64 max = 3;
  int64 step = 4;
  string unit = 5;
  int64 scale = 6;
  int64 max_len = 7;
  repeated string range = 8;
  repeated string label = 9;
  string default_value = 10;
  int64 max_size = 11;
  map<string, Property> properties = 12;
  TypeSpec element_type_spec = 13;
}

message TMEvent {
  string ability_id = 1;
  string product_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  repeated InputOutput output_params = 6;
  map<string, string> attributes = 7;
}

message InputOutput {
  string code = 1;
  string name = 2;
  TypeSpec type_spec = 3;
}

message Action {
  string ability_id = 1;
  string product_id = 2;
  string code = 3;
  string name = 4;
  string description = 5;
  repeated InputOutput input_params = 6;
  repeated InputOutput output_params = 7;
  map<string, string> attributes = 8;
}

message ThingModelProduct {
  string id = 1;
  string name = 2;
  string description = 4;
  string model = 5;
  repeated Action action = 6;
  repeated TMEvent event = 7;
  repeated Property property = 8;
  string device_library_id = 9;
}

message TMProductByIdRequest {
  string id = 1;
}

message TMProductSearchQueryRequest{
  common.BaseSearchConditionQuery base_search_condition_query = 1;
  string device_library_id = 2;
}

message TMMultiProductsResponse {
  uint32 total = 1;
  repeated ThingModelProduct products = 2;
}

////////////////////////////////////////////////////////////////////////////////////////
service RpcThingModel {
  rpc ProductById(TMProductByIdRequest) returns (ThingModelProduct) {}
  rpc ProductsSearch(TMProductSearchQueryRequest) returns (TMMultiProductsResponse) {}
}

////////////////////////////////////////////////////////////////////////////////////////
// 物模型resource与driver sdk交互
enum ThingModelOperationType {
  UNSPECIFIED = 0;
  MODEL_GET = 1;  // 设备上报向云端获取物模型查询请求
  MODEL_GET_RESPONSE = 2; // 云端响应设备上报向云端获取物模型查询请求
  PROPERTY_REPORT = 3;    // 设备上报向云端上报设备属性值
  PROPERTY_REPORT_RESPONSE = 4;   // 云端响应设备上报向云端上报设备属性值
  PROPERTY_SET = 5;   // 云端下发属性设置
  PROPERTY_SET_RESPONSE = 6;   // 设备响应云端下发属性设置
  PROPERTY_GET = 7;   // 云端下发属性查询请求
  PROPERTY_GET_RESPONSE = 8;   // 设备响应云端下发属性查询请求
  ACTION_EXECUTE = 9;     // 云端下发设备动作执行消息
  ACTION_EXECUTE_RESPONSE = 10;     // 设备响应云端下发设备动作执行消息
  EVENT_TRIGGER = 11;  // 设备上报事件触发消息
  EVENT_TRIGGER_RESPONSE = 12;  // 云端响应设备上报事件触发消息
  DATA_BATCH_REPORT = 13;     // 设备上报 批量上报属性或事件数据
  DATA_BATCH_REPORT_RESPONSE = 14;   // 云端响应设备上报 批量上报属性或事件数据
  PROPERTY_DESIRED_GET = 15;  // 设备上报向云端获取属性期望值请求
  PROPERTY_DESIRED_GET_RESPONSE = 16;  // 云端响应设备上报向云端获取属性期望值请求
  PROPERTY_DESIRED_DELETE = 17;  // 设备上报向云端发送清除属性期望值请求
  PROPERTY_DESIRED_DELETE_RESPONSE = 18;  // 云端响应设备上报向云端发送清除属性期望值请求
}

// 物模型
message ThingModelMsg {
  string cid = 1; // 下发的目标设备id
  ThingModelOperationType op_type = 2;
  string data = 3;
}

// 物模型消息下发 tuya cloud->tedge->driver
// sdk实现
service ThingModelDownService {
    rpc ThingModelMsgIssue(ThingModelMsg) returns (google.protobuf.Empty) {}
    rpc TMUpdateProductCallback(ThingModelProduct) returns (google.protobuf.Empty) {}
}

////////////////////////////////////////////////////////////////////////////////////////
// Atop Http Request
message HttpRequestParam {
    string http_url = 1;
    string http_api = 2;
    string version = 3;
    bytes  payload = 4;
}

// 数据上报返回
message HttpResponse {
    string message = 1;
}

// 物模型消息上报 driver->tedge->tuya cloud
// sdk异步等待结果
// resource实现
service ThingModelUpService {
    rpc ThingModelMsgReport(ThingModelMsg) returns (google.protobuf.Empty) {}

    //d.json
    rpc HttpRequestProxy(HttpRequestParam) returns (HttpResponse) {}
}
