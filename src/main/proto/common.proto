syntax = "proto3";

package common;

option java_multiple_files = true;
option java_package = "tuya.tedge.driver.sdk.grpc.common";
option java_outer_classname = "CommonProto";
option objc_class_prefix = "CMN";
import "google/protobuf/empty.proto";

enum EnumTUYAMQTTProtocol {
    ENUM_TUYAMQTT_PROTOCOL_UNSPECIFIED = 0;
    ENUM_TUYAMQTT_PROTOCOL_5 = 5;
    ENUM_TUYAMQTT_PROTOCOL_64 = 64;
    ENUM_TUYAMQTT_PROTOCOL_302 = 302;
    ENUM_TUYAMQTT_PROTOCOL_312 = 312;
}

// 日志级别
enum EnumLogLevel {
    ENUM_LOG_LEVEL_UNSPECIFIED = 0;
    ENUM_LOG_LEVEL_DEBUG = 1;
    ENUM_LOG_LEVEL_INFO = 2;
    ENUM_LOG_LEVEL_WARNING = 3;
    ENUM_LOG_LEVEL_ERROR = 4;
}

message LogLevelRequest {
    EnumLogLevel log_level = 1;
}

message PageRequest  {
    string name_like = 1;
    int64 page = 2;
    int64 page_size = 3;
}

//
message BaseWithIdResponse {
    repeated string id = 1;
}

//
message BaseExistResponse {
    bool exist = 1;
}

// 条件查询
message BaseSearchConditionQuery {
    int32 page = 1;
    int32 page_size = 2;
    string id = 3;
    string ids = 4;
    string like_id = 5;
    string name = 6;
    string name_like = 7;
    bool is_all = 8;
}

// count
message CountResponse {
    uint32 count = 1;
}

// pong
message Pong {
    string timestamp = 2;
}

// secret
message SecretDataKeyValue {
    string key = 1;
    string value = 2;
}

message SecretRequest {
    string path = 2;
    repeated SecretDataKeyValue secret_data = 3;
}

// version
message VersionResponse {
    string version = 2;
}

message VersionSdkResponse {
    string sdk_version = 2;
}

service Common {
    // Ping tests whether the service is working
    rpc Ping(google.protobuf.Empty) returns (Pong) {}
    // Version obtains version information from the target service.
    rpc Version(google.protobuf.Empty) returns (VersionResponse) {}
}